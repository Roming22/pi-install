---
- name: Copy resources
  ansible.builtin.copy:
    src: ../resources
    dest: /var/ansible

- name: Create a directory if it does not exist
  become: yes
  become_user: root
  ansible.builtin.file:
    path: /mnt/nas
    state: directory
    mode: "0777"

- name: Install dependencies
  apt:
    name:
      - cifs-utils
    state: present

- name: Mount NAS
  become: yes
  become_user: root
  ansible.posix.mount:
    src: //192.168.72.10/cluster
    path: /mnt/nas
    opts: "credentials={{ ansible_facts.user_dir }}/.smb_passwords,uid={{ ansible_facts.user_uid }},gid={{ ansible_facts.user_gid }}"
    state: mounted
    fstype: cifs

- name: Deploy local registry with pull-through cache
  shell: |
    docker build --tag registry-ptc:2 --file /var/ansible/resources/docker/registry/Dockerfile /var/ansible/resources/docker/registry
    k3d registry list k3d-registry.localhost || k3d registry create registry.localhost --image registry-ptc:2 -p 5000
    while ! curl -s http://localhost:5000/v2/_catalog; do
      sleep 2
    done

- name: Deploy k3d cluster
  shell: |
    CLUSTER_NAME="k3s-$(hostname -s)-${USER}"
    k3d cluster list "${CLUSTER_NAME}" 2>/dev/null || k3d cluster create \
        ${CLUSTER_NAME} \
        --agents=1 \
        --api-port=$(shuf -i 6000-7000 -n 1) \
        --image=rancher/k3s:latest \
        --k3s-server-arg=--cluster-domain=${CLUSTER_NAME}.local \
        --k3s-server-arg=--tls-san=$(hostname -i | cut -d" " -f1) \
        --k3s-server-arg=--tls-san=$(hostname -f) \
        --kubeconfig-switch-context \
        --port=443:443@loadbalancer \
        --registry-use=k3d-registry.localhost:5000 \
        --registry-config="/var/ansible/resources/k3s/registry.yml" \
        --servers=1 \
        --timeout=120s \
        --volume /mnt/nas/k3s/storage/persistentvolumes:/mnt/nas \
        --volume /mnt/nas/k3s/storage/storageclasses/local-path:/var/lib/rancher/k3s/storage || exit 1
    sed -i -e "s|https://0.0.0.0|https://$(hostname -i | cut -d" " -f1)|" "$HOME/.kube/config"
    while kubectl get pods --all-namespaces | grep -E -q -v " STATUS | Running | Completed "; do \
      sleep 5 ; \
    done

- name: Deploy rancher
  shell: |
    kubectl apply -f /var/ansible/resources/k8s/rancher.yml

- name: Validate Traefik deployment
  shell: |
    # Make sure traefik is created before checking state
    while kubectl --namespace kube-system get service traefik | grep -q pending; do sleep 5; done

- name: Validate Rancher deployment
  shell: |
    date
    while ! curl -k -s "https://$(hostname -i | cut -d" " -f1)/" \
        | grep -E -q "{.*}"; do
      sleep 5;
    done
    date

- name: System upgrade
  shell: |
    kubectl apply -f https://github.com/rancher/system-upgrade-controller/releases/download/v0.6.2/system-upgrade-controller.yaml
